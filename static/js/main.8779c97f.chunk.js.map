{"version":3,"sources":["TodoContext.js","components/Header.js","components/Form/InputText.js","components/Form/InputSelect.js","components/Form/index.js","components/TodoList/Todo.js","components/TodoList/index.js","Images/CircleTop.svg","Images/CircleRight.svg","Images/CircleMiddle.svg","Images/CircleBottom.svg","Theme.js","App.js","index.js"],"names":["TodoContext","createContext","TodoProvider","props","useState","todos","setTodos","todo","setTodo","filter","setFilter","filteredTodos","setFilteredTodos","useEffect","getLocalTodos","saveLocalTodos","localStorage","setItem","JSON","stringify","getItem","todoLocal","parse","Provider","value","contextTodo","contextTodos","contextFilter","contextFilteredTodos","children","Header","div","initial","animate","transition","duration","delay","variants","hidden","opacity","y","visible","Typography","variant","style","fontFamily","CustomTextField","withStyles","theme","root","width","breakpoints","up","fontSize","color","padding","top","left","palette","primary","height","borderRadius","boxShadow","borderColor","transform","TextField","Input","useContext","onChange","e","target","label","required","StyledFormControl","right","FormControl","InputSelect","state","setState","InputLabel","id","Select","labelId","event","MenuItem","useStyles","makeStyles","backgroundColor","Form","classes","submitHandler","preventDefault","Math","random","todoText","status","Box","Grid","container","spacing","item","xs","onSubmit","justify","x","alignContent","Fab","className","type","size","Todo","currentTodo","readOnly","text","onClick","map","TodoList","variantsEven","variantsOdd","index","createMuiTheme","main","responsiveFontSizes","Theme","ThemeProvider","margin","App","src","CircleTop","alt","CircleRight","CircleMiddle","CircleBottom","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8779c97f.chunk.js","sourcesContent":["import { useState , createContext , useEffect } from 'react';\r\n\r\nexport const TodoContext = createContext();\r\n\r\nexport const TodoProvider = (props) => {\r\n    const [todos, setTodos] = useState([]);\r\n    const [todo, setTodo] = useState('');\r\n    const [filter, setFilter] = useState('all');\r\n    const [filteredTodos, setFilteredTodos] = useState([]);\r\n\r\n    //Get todos from Local Storage\r\n    useEffect(() => {\r\n        getLocalTodos();\r\n    },[]);\r\n\r\n    //Save the todos to Local Storage\r\n    useEffect(() => {\r\n        saveLocalTodos();\r\n    },[todos,filter]);\r\n\r\n    //Function that saves the todos to Local Storage\r\n    const saveLocalTodos = () => {\r\n        localStorage.setItem(\"todos\", JSON.stringify(todos));\r\n    };\r\n\r\n    //Function that gets the todos from Local Storage\r\n    const getLocalTodos = () => {\r\n        if(localStorage.getItem(\"todos\") === null){\r\n            localStorage.setItem(\"todos\", JSON.stringify([]));\r\n        }else{\r\n            let todoLocal = JSON.parse(localStorage.getItem(\"todos\"));\r\n            setTodos(todoLocal);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <TodoContext.Provider \r\n                value={{\r\n                    contextTodo: [todo,setTodo],\r\n                    contextTodos: [todos,setTodos],\r\n                    contextFilter: [filter,setFilter],\r\n                    contextFilteredTodos: [filteredTodos,setFilteredTodos]\r\n                        }}>\r\n            {props.children}\r\n        </TodoContext.Provider>\r\n    )\r\n}","import React from 'react';\r\n\r\nimport { motion } from 'framer-motion';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nfunction Header() {\r\n    //motion.js animation variants\r\n    const variants = {\r\n        hidden: { opacity: 0 , y: \"-100%\"},\r\n        visible: { opacity: 1 , y: 0},\r\n    }\r\n    return (<motion.div initial=\"hidden\"\r\n                        animate=\"visible\"\r\n                        transition={{ duration: .5, delay: .1}}\r\n                        variants={variants}>\r\n                <Typography variant=\"h1\" style={{fontFamily: 'Montserrat, sans-serif'}}>MY TODO LIST</Typography>\r\n            </motion.div>\r\n            )\r\n}\r\n\r\nexport default Header\r\n","import React , { useContext } from 'react'\r\n\r\nimport { TodoContext } from '../../TodoContext'\r\n\r\nimport TextField from '@material-ui/core/TextField'\r\n\r\nimport { withStyles } from '@material-ui/core/styles'\r\n\r\nconst CustomTextField = withStyles(theme => ({\r\n    root: {\r\n        width: '17rem',\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: '30rem'\r\n        },\r\n        [theme.breakpoints.up('lg')]: {\r\n            width: '40rem'\r\n        },\r\n        '& input': {\r\n            fontSize: 'var(--fontSize-md)', //Input font size\r\n            fontFamily: 'Montserrat', //Input font family\r\n            color: 'var(--color-default)', //Input text color\r\n            padding: '1rem'  //Input padding\r\n        },\r\n        '& label': {\r\n            fontSize: 'var(--fontSize-sm)', //Label font size\r\n            fontFamily: 'Montserrat', //Input font family\r\n            color: 'var(--color-label)', // Label color\r\n            top: '.3rem', // Label position-top\r\n            left: '.6rem', //Label position-left\r\n            [theme.breakpoints.up('sm')]:{//Label styles for medium screens\r\n                top: '.3rem'\r\n            },\r\n            [theme.breakpoints.up('lg')]:{//Label styles for large screens\r\n                fontSize: 'var(--fontSize-md)',\r\n                top: '1.1rem'\r\n            },\r\n            '&.Mui-focused': {\r\n                color: theme.palette.primary // Label color on focus\r\n            },\r\n            '& + .MuiInput-formControl': {\r\n                height: '3.5rem', //Input height\r\n                borderRadius: '.3rem', //Input border radius\r\n                boxShadow: '0 .2rem 1.8rem -.5rem #000000', //Input box shadow\r\n                [theme.breakpoints.up('lg')]: { //Input height for large devices\r\n                    height: '5rem'\r\n                }\r\n            },\r\n            '& + .MuiInput-underline': {\r\n                '&:before': {\r\n                    borderColor: 'var(--color-default)' // Underline color\r\n                },\r\n                '&:hover:before': {\r\n                    borderColor: 'var(--color-default)', // Underline color on hover\r\n                }\r\n            }\r\n        },\r\n        '& .MuiInputLabel-shrink':{\r\n            transform: 'translate(0, -.5rem) scale(0.75)', //Shrinked input label\r\n            [theme.breakpoints.up('sm')]: {\r\n                transform: 'translate(0, -.9rem) scale(0.75)'//Shrinked input label for medium devices\r\n            },\r\n            [theme.breakpoints.up('lg')]: {\r\n                transform: 'translate(0, -1.4rem) scale(0.75)'//Shrinked input label for large devices\r\n            }\r\n        },\r\n    }\r\n}))(TextField);\r\n\r\n\r\nfunction Input() {\r\n    const { contextTodo } = useContext(TodoContext);\r\n\r\n    const [todo,setTodo] = contextTodo;\r\n\r\n    const changeHandler = (e) => {\r\n        setTodo(e.target.value)\r\n    }\r\n\r\n    return <CustomTextField onChange={changeHandler}\r\n                            value={todo}\r\n                            label=\"Enter your task\"\r\n                            required/>\r\n}\r\n\r\nexport default Input\r\n","import React , { useState , useContext } from 'react'\r\n\r\nimport { TodoContext } from '../../TodoContext'\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport {\r\n    InputLabel,\r\n    MenuItem,\r\n    FormControl,\r\n    Select \r\n} from '@material-ui/core';\r\n\r\nconst StyledFormControl = withStyles(theme => ({\r\n    root:{\r\n        width: '17rem',\r\n        '& label': {\r\n            fontSize: 'var(--fontSize-sm)', //Label font size\r\n            fontFamily: 'Montserrat', //Label font family\r\n            color: 'var(--color-label)', // Label color\r\n            top: '5px', // Label position-top\r\n            left: '6px', //Label position-left\r\n            '& + .MuiInputBase-root': {\r\n                fontSize: 'var(--fontSize-md)', //Select input font size\r\n                fontFamily: 'Montserrat', //Select input font family\r\n                color: 'var(--color-default)', //Select input text color\r\n                padding: '.5rem',  //Select input padding\r\n                boxShadow: '0 .2rem 1.8rem -.5rem #000000', //Select input box shadow\r\n                borderRadius: '.3rem', //Input border radius\r\n            },\r\n            '& + .MuiInput-underline': {\r\n                '&:before': {\r\n                    borderColor: 'var(--color-default)' // Underline color\r\n                },\r\n                '&:hover:before': {\r\n                    borderColor: 'var(--color-default)', // Underline color on hover\r\n                }\r\n            }\r\n        },\r\n        //Select input label styles when it's shrinked\r\n        '& .MuiInputLabel-shrink':{\r\n            transform: 'translate(0, -.6rem) scale(0.75)',\r\n            fontFamily: 'Montserrat'\r\n        },\r\n        //Select input styles for svg icon\r\n        '& svg': {\r\n            color: 'var(--color-default)',\r\n            top: '30%',\r\n            right: '1rem'\r\n        }\r\n    }\r\n}))(FormControl);\r\n\r\n\r\nfunction InputSelect() {\r\n    const { contextFilter } = useContext(TodoContext);\r\n\r\n    const [filter,setFilter] = contextFilter;\r\n\r\n    const [state, setState] = useState('all');\r\n\r\n    const handleChange = (event) => {\r\n        setState(event.target.value);\r\n        setFilter(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <StyledFormControl>\r\n            <InputLabel id=\"label\">All</InputLabel>\r\n            <Select\r\n                labelId=\"label\"\r\n                id=\"select\"\r\n                value={state}\r\n                onChange={handleChange}\r\n            >\r\n                <MenuItem value={'all'}>All</MenuItem>\r\n                <MenuItem value={'completed'}>Completed</MenuItem>\r\n                <MenuItem value={'uncompleted'}>Uncompleted</MenuItem>\r\n            </Select>\r\n      </StyledFormControl>\r\n    )\r\n}\r\n\r\nexport default InputSelect\r\n","import React , { useContext } from 'react';\r\n\r\nimport { TodoContext } from '../../TodoContext';\r\n\r\nimport Input from './InputText';\r\nimport Select from './InputSelect';\r\n\r\nimport {\r\n    Grid,\r\n    Box,\r\n    Fab\r\n} from '@material-ui/core';\r\n\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport { motion } from 'framer-motion';\r\n\r\n//Material Ui  styles\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        backgroundColor: 'var(--color-primary)',\r\n        boxShadow:'0 .2rem 1.8rem -.3rem #000000',\r\n        transform: 'translateY(15%)',\r\n        [theme.breakpoints.up('sm')]: {\r\n            transform: 'translateY(5%)'\r\n        },\r\n        '&:hover': {\r\n            backgroundColor: 'var(--color-primary-light)'\r\n        }\r\n    }\r\n}));\r\n\r\nconst Form = () => {\r\n    //motion.js animation variants\r\n    const variantsInputText = {\r\n        hidden: { opacity: 0 , x: \"-100%\"},\r\n        visible: { opacity: 1 , x: 0},\r\n    }\r\n\r\n    const variantsButton = {\r\n        hidden: { opacity: 0 , x: \"100%\"},\r\n        visible: { opacity: 1 , x: 0},\r\n    }\r\n\r\n    const variantsInputSelect = {\r\n        hidden: { opacity: 0 , x: \"-100%\"},\r\n        visible: { opacity: 1 , x: 0},\r\n    }\r\n\r\n    const classes = useStyles();\r\n\r\n    //Context APIs\r\n    const { contextTodo , contextTodos } = useContext(TodoContext);\r\n\r\n    const [todo,setTodo] = contextTodo;\r\n    const [todos,setTodos] = contextTodos;\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(todo !== ''){\r\n            setTodos([...todos,{\r\n                id: Math.random()*1000,\r\n                todoText: todo,\r\n                status: false\r\n            }]);\r\n            setTodo('');\r\n        }\r\n    }\r\n\r\n    return (\r\n            <Box>\r\n                <Grid container spacing={3}>\r\n                    <Grid item container xs={12}>\r\n                        <form onSubmit={submitHandler} style={{width:'100%'}}>\r\n                            <Grid container spacing={3}>\r\n                                <Grid item container justify=\"flex-start\" xs={9}>\r\n                                    <motion.div initial=\"hidden\"\r\n                                                animate=\"visible\"\r\n                                                transition={{ duration: .5, delay: .2 }}\r\n                                                variants={variantsInputText}>\r\n                                        <Input />\r\n                                    </motion.div>\r\n                                </Grid>\r\n                                <Grid item container justify=\"flex-end\"  alignContent=\"flex-end\" xs={3}>\r\n                                    <motion.div initial=\"hidden\"\r\n                                                animate=\"visible\"\r\n                                                transition={{ duration: .5, delay: .2 }}\r\n                                                variants={variantsButton}>\r\n                                        <Fab \r\n                                            onSubmit={submitHandler}\r\n                                            className={classes.root}\r\n                                            type=\"submit\"\r\n                                            size=\"medium\">\r\n                                            <AddIcon style={{color: 'var(--color-default)'}} fontSize=\"large\"/>\r\n                                        </Fab>\r\n                                    </motion.div>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </form>\r\n                    </Grid>\r\n                    <Grid item container justify=\"flex-start\" xs={12}>\r\n                        <motion.div initial=\"hidden\"\r\n                                    animate=\"visible\"\r\n                                    transition={{ duration: .5, delay: .3 }}\r\n                                    variants={variantsInputSelect}>\r\n                            <Select />\r\n                        </motion.div>\r\n                    </Grid>\r\n                </Grid>\r\n            </Box>\r\n    )\r\n}\r\n\r\nexport default Form;\r\n\r\n","import React , { useContext } from 'react'\r\n\r\nimport { TodoContext } from '../../TodoContext'\r\nimport './style.css';\r\n\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nfunction Todo(props) {\r\n    const { contextTodos } = useContext(TodoContext);\r\n\r\n    const [todos,setTodos] = contextTodos;\r\n\r\n    const deleteHandler = () => {\r\n        setTodos(todos.filter((item) => item.id !== props.currentTodo.id));\r\n    }\r\n\r\n    const clickHandler = () => {\r\n\r\n        if(!props.currentTodo.status){\r\n            setTodos(todos.map((item) => {\r\n                if(item.id === props.currentTodo.id){\r\n                    return {\r\n                        ...item,status: !item.status\r\n                    }\r\n                }\r\n                return item;\r\n            }));\r\n            \r\n        }else{\r\n            setTodos(todos.map((item) => {\r\n                if(item.id === props.currentTodo.id){\r\n                    return {\r\n                        ...item,status: !item.status\r\n                    }\r\n                }\r\n                return item;\r\n            }));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={`todo ${props.currentTodo.status ? \"todo--completed\" : \"\"}`} id=\"todo\">\r\n                <input readOnly className={`todo__context ${props.currentTodo.status ? \"todo__context--completed\" : \"\"}`} type=\"text\" value={props.text}/>\r\n                <span onClick={clickHandler} className={`todo__button--status ${props.currentTodo.status ? \"todo__button--status--completed\" : \"\"}`} id=\"todo__button--status\">\r\n                    <CheckIcon className=\"todo__icon--check\" fontSize=\"inherit\"/>\r\n                </span>\r\n                <span onClick={deleteHandler} className=\"todo__button--delete\" id=\"todo__button--delete\">\r\n                    <DeleteIcon className=\"todo__icon--delete\" fontSize=\"inherit\"/>\r\n                </span>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Todo\r\n","import React , { useContext , useEffect } from 'react';\r\n\r\nimport { TodoContext } from '../../TodoContext';\r\n\r\nimport Todo from './Todo';\r\n\r\nimport { motion } from 'framer-motion';\r\n\r\nfunction TodoList() {\r\n    const { contextTodos, contextFilter, contextFilteredTodos} = useContext(TodoContext);\r\n\r\n    const [todos,setTodos] = contextTodos;\r\n    const [filter,setFilter] = contextFilter;\r\n    const [filteredTodos,setFilteredTodos] = contextFilteredTodos;\r\n\r\n    //motion.js animation variants for even and odd elements of the todolist\r\n    const variantsEven = {\r\n        hidden: { opacity: 0 , x: \"-100%\"},\r\n        visible: { opacity: 1 , x: 0},\r\n    }\r\n\r\n    const variantsOdd = {\r\n        hidden: { opacity: 0 , x: \"100%\"},\r\n        visible: { opacity: 1 , x: 0},\r\n    }\r\n\r\n    useEffect(() => {\r\n        switch(filter){\r\n            case 'completed':\r\n                setFilteredTodos(todos.filter(todo => todo.status === true ));\r\n                break;\r\n            case 'uncompleted':\r\n                setFilteredTodos(todos.filter(todo => todo.status === false ));\r\n                break;\r\n            default:\r\n                setFilteredTodos(todos);\r\n        }\r\n    },[filter,todos]);\r\n\r\n    return (\r\n        <div id=\"todoList\" style={{width: '100%'}}>\r\n            {filteredTodos.map((todo,index) => (\r\n                <motion.div key={todo.id} initial=\"hidden\"\r\n                animate=\"visible\"\r\n                transition={{ duration: 0.5, delay: .1 }}\r\n                variants={index % 2 === 0 ? variantsEven : variantsOdd}>\r\n                    <Todo text={todo.todoText} currentTodo={todo}/>\r\n                </motion.div>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoList\r\n","export default __webpack_public_path__ + \"static/media/CircleTop.e99b61bf.svg\";","export default __webpack_public_path__ + \"static/media/CircleRight.a99e756c.svg\";","export default __webpack_public_path__ + \"static/media/CircleMiddle.3745f1b7.svg\";","export default __webpack_public_path__ + \"static/media/CircleBottom.a81a8883.svg\";","import { ThemeProvider , unstable_createMuiStrictModeTheme as createMuiTheme , responsiveFontSizes} from '@material-ui/core/styles'\r\n\r\nlet theme = createMuiTheme({\r\n    palette: {\r\n      primary: {\r\n        main: '#4AE3B5'\r\n      }\r\n    }\r\n  });\r\n\r\ntheme = responsiveFontSizes(theme);\r\n\r\nconst Theme = props => {\r\n    return <ThemeProvider theme={theme}>{props.children}</ThemeProvider>\r\n}\r\n\r\nexport default Theme\r\n","import React from 'react';\n\nimport './App.css';\n\nimport { TodoProvider } from './TodoContext'; //Context API\n\nimport Header from './components/Header';\nimport Form from './components/Form/';\nimport TodoList from './components/TodoList';\n\nimport CircleTop from './Images/CircleTop.svg';\nimport CircleRight from './Images/CircleRight.svg';\nimport CircleMiddle from './Images/CircleMiddle.svg';\nimport CircleBottom from './Images/CircleBottom.svg';\n\nimport Theme from './Theme'; //Material Ui theme\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\n//Styles for material ui components\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: '0 auto',\n    width: '90%',\n    [theme.breakpoints.up('sm')]: {\n      margin: '4rem auto 0 auto 0',\n      width: '60%'\n    },\n    [theme.breakpoints.up('md')]: {\n      margin: '4rem auto 0 auto 0',\n      width: '45%'\n    },\n    [theme.breakpoints.up('lg')]: {\n      margin: '4rem auto 0 auto 0',\n      width: '38%'\n    }\n  }\n}));\n\nconst App = () => {\n  const classes = useStyles();\n\n  return (\n    <TodoProvider>\n      <Theme>\n        <img className=\"circle circle__top\" src={CircleTop} alt=\"circle\"/>\n        <img className=\"circle circle__right\" src={CircleRight} alt=\"circle\"/>\n        <img className=\"circle circle__middle\" src={CircleMiddle} alt=\"circle\"/>\n        <img className=\"circle circle__bottom\" src={CircleBottom} alt=\"circle\"/>\n        <Grid container className={classes.root} spacing={5}>\n          <Grid container item justify=\"center\" xs={12}>\n            <Header />\n          </Grid>\n          <Grid container item justify=\"space-between\" xs={12}>\n            <Form />\n          </Grid>\n          <Grid container item justify=\"center\" xs={12}>\n              <TodoList />\n          </Grid>\n        </Grid>\n      </Theme>\n    </TodoProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}